html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none;
}

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none;
}

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0;
}

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */
}

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */
}

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type=checkbox],
input[type=radio] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

html,
button,
input,
select,
textarea {
  color: #222;
}

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

img {
  vertical-align: middle;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

textarea {
  resize: vertical;
}

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

@font-face {
  font-display: swap;
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 400;
  src: url("fonts/montserrat-v25-latin-regular.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 500;
  src: url("fonts/montserrat-v25-latin-500.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 600;
  src: url("fonts/montserrat-v25-latin-600.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Montserrat";
  font-style: normal;
  font-weight: 700;
  src: url("fonts/montserrat-v25-latin-700.woff2") format("woff2");
}
@font-face {
  font-display: swap;
  font-family: "Poppins";
  font-style: normal;
  font-weight: 700;
  src: url("fonts/poppins-v20-latin-700.woff2") format("woff2");
}
body {
  font-family: "Montserrat", Arial, Helvetica, sans-serif;
  color: #544837;
  background-color: #FFF;
}

.container {
  margin: 0 auto;
  max-width: 1440px;
  width: 100%;
  padding: 0 120px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.col-12 {
  max-width: 100%;
  width: 100%;
}

.col-7 {
  max-width: 58.3333333333%;
  width: 100%;
}

.col-6 {
  max-width: 50%;
  width: 100%;
}

.col-5 {
  max-width: 41.6666666667%;
  width: 100%;
}

.col-4 {
  max-width: 33.3333333333%;
  width: 100%;
}

.col-3 {
  max-width: 25%;
  width: 100%;
}

.col-2 {
  max-width: 16.6666666667%;
  width: 100%;
}

[class*=header] {
  color: #2F281E;
  font-weight: 700;
}

[class$=_button] {
  text-decoration: none;
  border-radius: 4px;
  padding: 13px 40px;
}

a {
  text-decoration: none;
}

footer {
  padding-bottom: 70px;
}

.header .row {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-top: 25px;
}

.menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-weight: 400;
}

.menu_item {
  display: inline-block;
}
.menu_item > a {
  color: #2F281E;
}
.menu_item:not(:first-child) {
  padding-left: 20px;
}
.menu_item > a:hover {
  color: #F90;
}

.sign-in-up {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}

.sign-in {
  display: inline-block;
}
.sign-in_button {
  color: #2F281E;
  background-color: #FFF;
  border: 1px solid #BCD0E5;
  padding: 13px 25px;
}

.sign-up {
  display: inline-block;
  padding-left: 32px;
}
.sign-up_button {
  color: #FFF;
  background-color: #F90;
  border: 1px solid #F90;
  padding: 13px 25px;
}

.design {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-top: 20px;
  padding-bottom: 100px;
}
.design_item1 {
  padding-top: 170px;
}
.design_item2 {
  text-align: end;
  padding-top: 70px;
}
.design_header {
  font-size: 44px;
  line-height: 54px;
}

.design_item_content {
  padding-top: 30px;
  font-size: 18px;
  line-height: 28px;
}

.button_container {
  padding-top: 50px;
}

.get_started_button {
  background: #F90;
  color: #FFF;
  font-family: "Poppins", Arial, Helvetica, sans-serif;
  font-weight: 700;
}

.we-design {
  background-image: url(../images/curve.svg);
  background-position: bottom;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: bottom 100px;
}
.we-design_list {
  padding-bottom: 75px;
}
.we-design_header {
  text-align: center;
  font-size: 36px;
  line-height: 1.2em;
  padding-bottom: 55px;
}
.we-design_item_header {
  padding-top: 30px;
  font-size: 22px;
  font-weight: 600;
}
.we-design_content {
  padding-top: 20px;
  font-weight: 500;
  line-height: 26px;
}
.we-design_button_container {
  padding-top: 85px;
  padding-left: calc(50% - 90px);
}
.we-design_button {
  background: #F90;
  color: #FFF;
  font-family: "Poppins", Arial, Helvetica, sans-serif;
  font-weight: 700;
}

.footer_headers {
  font-size: 20px;
  font-weight: 700;
  line-height: 30px;
}

.quick-links_block {
  padding-left: 30px;
}

.quick-links_item:first-child,
.legal-stuff_item:first-child,
.quick-links > ul,
.legal-stuff > ul {
  padding-top: 20px;
}

.quick-links_item,
.legal-stuff_item {
  color: #544837;
  font-weight: 500;
  line-height: 2.6em;
}

.knowing {
  padding-left: 55px;
}

.input {
  padding-top: 20px;
}
.input_space {
  width: 320px;
  height: 50px;
  font-family: inherit;
  padding-left: 10px;
  border-radius: 4px;
  border: 1px solid #BCD0E5;
}

input::-webkit-input-placeholder {
  color: #BCD0E5;
}

.footer_button-box {
  padding-top: 40px;
}

.footer_button {
  font-family: "Poppins", Arial, Helvetica, sans-serif;
  color: #FFF;
  font-weight: 700;
  background-color: #F90;
  border: 1px solid #F90;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
